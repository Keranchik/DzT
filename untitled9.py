# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-sTFSY86y4Id1YhhzIVIOk7m3rfDbnlt
"""

n = int(input())

cities = {}

for _ in range(n):

    city = input()

    if city in cities:

        cities[city] += 1

    else:

        cities[city] = 1



count = 0

for value in cities.values():

    if value > 1:

        count += 1



print(count)

text = "младшая сестра Фёдора – Соня пишет сочинение. фёдор знает, что соня никогда не ставит заглавные буквы! так как для набора текста использует компьютер. пока никто не видит, фёдор решил внести исправления в сочинение сестры? и написал программу, которая восстанавливает заглавные буквы в строке."

capitalized_text = capitalize_text(text)

print(capitalized_text)

str1 = input("Введите первую строку: ")

str2 = input("Введите вторую строку: ")



str1 = str1.replace(' ', '')

str2 = str2.replace(' ', '')



str1 = str1.lower()

str2 = str2.lower()



set1 = set(str1)

set2 = set(str2)



if set1 == set2:

    print("Строки являются анаграммами")

else:

    print("Строки не являются анаграммами")

# Создаем три множества для задач по алгебре, геометрии и тригонометрии

algebra = set()

geometry = set()

trigonometry = set()



# Читаем фамилии учеников, решивших задачи по алгебре

algebra_students = input().split()

for student in algebra_students:

    algebra.add(student)



# Читаем фамилии учеников, решивших задачи по геометрии

geometry_students = input().split()

for student in geometry_students:

    geometry.add(student)



# Читаем фамилии учеников, решивших задачи по тригонометрии

trigonometry_students = input().split()

for student in trigonometry_students:

    trigonometry.add(student)



# Находим пересечение множеств алгебры, геометрии и тригонометрии

all_three = algebra.intersection(geometry, trigonometry)



# Если пересечение пустое, выводим сообщение

if len(all_three) == 0:

    print("Все три задачи никто не решил")

else:

    # Выводим фамилии учеников, которые есть в пересечении множеств, в алфавитном порядке

    for student in sorted(all_three):

        print(student, end=" ")